name: "ECS Deployment"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      create_release:
        type: boolean
        required: false
        default: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: actions-tools/yaml-outputs@v2
        id: config
        with:
          file-path: 'config-pipeline.yml'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.config.outputs[format('{0}{1}{2}','environments__', inputs.environment,'__aws-assume-role-arn')  ] }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ steps.config.outputs[format('{0}{1}{2}','environments__', inputs.environment,'__aws-region')  ] }}

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $LATEST_TAG"
          echo "::set-output name=latest_tag::$LATEST_TAG"
      - name: Increment version
        id: increment_version
        run: |
          if [ -z "${{ steps.get_latest_tag.outputs.latest_tag }}" ]; then
            NEW_VERSION="1.0.0"
          else
            LATEST_TAG=${{ steps.get_latest_tag.outputs.latest_tag }}
            VERSION=${LATEST_TAG}
            IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
            VERSION_PARTS[2]=$((VERSION_PARTS[2]+1))
            NEW_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          fi
          echo "New version: $NEW_VERSION"
          echo "::set-output name=new_version::$NEW_VERSION"            